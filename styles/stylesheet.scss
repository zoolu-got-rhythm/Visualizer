

$paragraph: #333;
$wallpaper: #111;

//defineded global vars here, which i can re-define later.
$mid-tone: null;
$brightest-tone: null;
$darkest-tone: null;

$color-scheme:#1e1; //pick a primary colour and insert the hexidecimal value. #1e1 #1ee

*{
  text-align:center;
  font-family:"Roboto"
}




body{
  background: $wallpaper
}




#container {

  width: 600px;
  height: 500px;
  margin:0 auto;
}

.column {
  float:left;
  width: 100px;
  height: 480px;
  /*background: #ccc;*/
  margin:10px;
}


@mixin bars($colour){
  height: 25px;
  float:left; /*excuse me if i mess up your css on .dot :p no worries*/
  width:90px;
  height:10px;
  border-radius:3px;
  margin:5px;
  background:$colour;
}

/*If i can somehow loop through these children for maximum
efficiency/can be done in js aswell */
@for $i from 1 through 10 {
  /*increments through all nth-childs and applies mixin*/
  .dot:nth-child(#{$i}){ // when using sass var's in selectors use #{$varName}
    @include bars($color-scheme * $i); //the whole color scheme will change based on this argument color.
  }

  /*capture and store nth-child(first), nth-child(last)
  styles inside a var to be re-used for hierarchy's */

  @if $i == 1 { $darkest-tone: $color-scheme * $i; }

  @if $i == 5 { $mid-tone: $color-scheme * $i; }

  @if $i == 10 { $brightest-tone: $color-scheme * $i; }



}

//p is below the for loop, because like css sass seems to cascade downwards.

p{
  color: $brightest-tone;
  margin:2px;
}

h2{
  color: $brightest-tone;
  background: #111;
}
